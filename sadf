[33mcommit 10d73d8c8df57a0196035272c134f7da497e2262[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Andrew C <andrewc@zeronox.com>
Date:   Mon Apr 25 12:23:50 2022 -0700

    Added week2

[1mdiff --git a/Week2/calc.css b/Week2/calc.css[m
[1mnew file mode 100644[m
[1mindex 0000000..4173cff[m
[1m--- /dev/null[m
[1m+++ b/Week2/calc.css[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m:root {[m
[32m+[m[32m  --buttonWidth: 44px;[m
[32m+[m[32m  --width: calc(var(--buttonWidth) * 4);[m
[32m+[m[32m}[m
[32m+[m[32m* {[m
[32m+[m[32m  box-sizing: border-box;[m
[32m+[m[32m}[m
[32m+[m[32m.calcBody {[m
[32m+[m[32m  max-width: var(--width);[m
[32m+[m[32m}[m
[32m+[m[32m.calcBody > input {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  height: var(--buttonWidth);[m
[32m+[m[32m  font-size: calc(var(--buttonWidth) * 0.8);[m
[32m+[m[32m}[m
[32m+[m[32m.calcButtons {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  flex-wrap: wrap;[m
[32m+[m[32m}[m
[32m+[m[32m.calcButtons button {[m
[32m+[m[32m  margin: 0;[m
[32m+[m[32m  width: var(--buttonWidth);[m
[32m+[m[32m  height: var(--buttonWidth);[m
[32m+[m[32m}[m
[32m+[m[32mbutton.span {[m
[32m+[m[32m  flex: 1 0 calc(var(--buttonWidth) * 1.4);[m
[32m+[m[32m}[m
[1mdiff --git a/Week2/calc3.html b/Week2/calc3.html[m
[1mnew file mode 100644[m
[1mindex 0000000..ed5f05e[m
[1m--- /dev/null[m
[1m+++ b/Week2/calc3.html[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <meta charset="utf-8" />[m
[32m+[m[32m    <title>Calc</title>[m
[32m+[m[32m    <meta name="viewport" content="width=device-width, initial-scale=1" />[m
[32m+[m[32m    <link rel="stylesheet" href="calc.css" />[m
[32m+[m[32m    <script src="calc3.js" defer></script>[m
[32m+[m[32m  </head>[m
[32m+[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <div class="calcBody">[m
[32m+[m[32m      <input type="text" id="calcInput" disabled />[m
[32m+[m[32m      <div class="calcButtons">[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="mem" class="span">[m
[32m+[m[32m          M[m
[32m+[m[32m        </button>[m
[32m+[m[32m        <button[m
[32m+[m[32m          onclick="calculator.buttonClicked(this)"[m
[32m+[m[32m          id="clear"[m
[32m+[m[32m          class="span"[m
[32m+[m[32m        >[m
[32m+[m[32m          C[m
[32m+[m[32m        </button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="div">/</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="seven">7</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="eight">8</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="nine">9</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="multiply">[m
[32m+[m[32m          X[m
[32m+[m[32m        </button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="four">4</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="five">5</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="six">6</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="subtract">[m
[32m+[m[32m          -[m
[32m+[m[32m        </button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="one">1</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="two">2</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="three">3</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="plus">+</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="zero" class="span">[m
[32m+[m[32m          0[m
[32m+[m[32m        </button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="decimal">.</button>[m
[32m+[m[32m        <button onclick="calculator.buttonClicked(this)" id="equal">=</button>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/Week2/calc3.js b/Week2/calc3.js[m
[1mnew file mode 100644[m
[1mindex 0000000..540e66d[m
[1m--- /dev/null[m
[1m+++ b/Week2/calc3.js[m
[36m@@ -0,0 +1,161 @@[m
[32m+[m[32m/*[m
[32m+[m[32mCalculator steps[m
[32m+[m[32mwait for a button to be clicked.[m
[32m+[m[32m  check which button it was[m
[32m+[m[32m  if it was a number[m
[32m+[m[32m    check to see if we have a current operation.[m
[32m+[m[32m      if yes...this should be the second number...store the number as number2[m
[32m+[m[32m      if no...this is the first number...store it.[m
[32m+[m[32m  if it was an operation[m
[32m+[m[32m    store the operation[m
[32m+[m[32m  if it was equal[m
[32m+[m[32m    check to make sure we have a current number1, number2, and operation[m
[32m+[m[32m      if yes...perform the operation, display the result, clear operation and number2[m
[32m+[m[32m      if no...error.[m
[32m+[m[32mTO DO[m
[32m+[m
[32m+[m[32m1. Now it works if I am adding. Just like we did with calc2...make the add method an arrow function. What happens this time? Why?[m
[32m+[m[32m2. Notice all of the 'this' references. how does 'this' work with objects and methods?[m
[32m+[m[32m3. This is a simple way to build objects for OOP in javascript.  There are a couple of problems however. Try adding this line at the bottom of your code: calculator._inputOutput.value = "aaaa";  That really should be private and not able to be changed outside of the methods of the object...but we can!  Convention in Javascript says that properties named with a leading _ should NOT be modified directly...but it is only convention.  Another problem would arise if we needed LOTS of calculators...this would not be an efficient way to do that.[m
[32m+[m[32m4. Below the calculater object is a bunch of commented out code. It is an example of what this object might look like as a Constructor Function. Notice the differences.  One big one is that the private members are really private.  buttonClicked is the only public member...so it's better, but still not ideal if we needed lots of calculators.[m
[32m+[m[32m*/[m
[32m+[m[32mconst calculator = {[m
[32m+[m[32m  _number1: 0,[m
[32m+[m[32m  _number2: 0,[m
[32m+[m[32m  _operation: '',[m
[32m+[m[32m  _inputOutput: document.getElementById('calcInput'),[m
[32m+[m[32m  clear: function() {[m
[32m+[m[32m    if (this._inputOutput.value == '') {[m
[32m+[m[32m      // we want a deep clear...clear all properties, usually the second click of C[m
[32m+[m[32m      this._operation = '';[m
[32m+[m[32m      this._number1 = 0;[m
[32m+[m[32m      this._number2 = 0;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // just clear the current display...usually the first click of C[m
[32m+[m[32m      this._inputOutput.value = '';[m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  add: function() {[m
[32m+[m[32m    return this._number1 + this._number2;[m
[32m+[m[32m  },[m
[32m+[m[32m  equal: function() {[m
[32m+[m[32m    console.log(this);[m
[32m+[m[32m    if (this._operation != '') {[m
[32m+[m[32m      switch (this._operation) {[m
[32m+[m[32m        case '+':[m
[32m+[m[32m          this._inputOutput.value = this.add();[m
[32m+[m[32m          break;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m[32m  buttonClicked: function(button) {[m
[32m+[m[32m    // notice the difference in the output between console.log and console.dir[m
[32m+[m[32m    console.log(button);[m
[32m+[m[32m    console.dir(button);[m
[32m+[m
[32m+[m[32m    let inputBox = this._inputOutput;[m
[32m+[m
[32m+[m[32m    switch (button.innerHTML) {[m
[32m+[m[32m      case 'M':[m
[32m+[m[32m        break;[m
[32m+[m[32m      case 'C':[m
[32m+[m[32m        calculator.clear();[m
[32m+[m[32m        break;[m
[32m+[m[32m      case '/':[m
[32m+[m[32m        break;[m
[32m+[m[32m      case 'X':[m
[32m+[m[32m        break;[m
[32m+[m[32m      case '-':[m
[32m+[m[32m        break;[m
[32m+[m[32m      case '+':[m
[32m+[m[32m        this._operation = '+';[m
[32m+[m[32m        break;[m
[32m+[m[32m      case '=':[m
[32m+[m[32m        this.equal();[m
[32m+[m[32m        break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        //if it made it to here it's a number[m
[32m+[m[32m        inputBox.value = parseFloat(button.innerHTML);[m
[32m+[m[32m        if (this._operation == '') {[m
[32m+[m[32m          this._number1 = parseFloat(button.innerHTML);[m
[32m+[m[32m        } else {[m
[32m+[m[32m          this._number2 = parseFloat(button.innerHTML);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// Constructor function[m
[32m+[m[32m// function Calculator() {[m
[32m+[m[32m//   // All of these properties and methods will be private[m
[32m+[m[32m//   let number1 = 0;[m
[32m+[m[32m//   let number2 = 0;[m
[32m+[m[32m//   let operation = '';[m
[32m+[m[32m//   let inputOutput = document.getElementById('calcInput');[m
[32m+[m
[32m+[m[32m//   function clear() {[m
[32m+[m[32m//     if (inputOutput.value == '') {[m
[32m+[m[32m//       // we want a deep clear...clear all properties, usually the second click of C[m
[32m+[m[32m//       operation = '';[m
[32m+[m[32m//       number1 = 0;[m
[32m+[m[32m//       number2 = 0;[m
[32m+[m[32m//     } else {[m
[32m+[m[32m//       // just clear the current display...usually the first click of C[m
[32m+[m[32m//       inputOutput.value = '';[m
[32m+[m[32m//     }[m
[32m+[m[32m//   }[m
[32m+[m
[32m+[m[32m//   function add() {[m
[32m+[m[32m//     return number1 + number2;[m
[32m+[m[32m//   }[m
[32m+[m[32m//   function equal() {[m
[32m+[m[32m//     console.log(this);[m
[32m+[m[32m//     if (operation != '') {[m
[32m+[m[32m//       switch (operation) {[m
[32m+[m[32m//         case '+':[m
[32m+[m[32m//           inputOutput.value = add();[m
[32m+[m[32m//           break;[m
[32m+[m[32m//       }[m
[32m+[m[32m//     }[m
[32m+[m[32m//   }[m
[32m+[m[32m//   // This object will have access to the private members...and will be able to be called outside of the function.[m
[32m+[m[32m//   return {[m
[32m+[m[32m//     buttonClicked: button => {[m
[32m+[m[32m//       // notice the difference in the output between console.log and console.dir[m
[32m+[m[32m//       console.log(button);[m
[32m+[m[32m//       console.dir(button);[m
[32m+[m
[32m+[m[32m//       let inputBox = inputOutput;[m
[32m+[m
[32m+[m[32m//       switch (button.innerHTML) {[m
[32m+[m[32m//         case 'M':[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case 'C':[m
[32m+[m[32m//           clear();[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case '/':[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case 'X':[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case '-':[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case '+':[m
[32m+[m[32m//           operation = '+';[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         case '=':[m
[32m+[m[32m//           equal();[m
[32m+[m[32m//           break;[m
[32m+[m[32m//         default:[m
[32m+[m[32m//           //if it made it to here it's a number[m
[32m+[m[32m//           inputBox.value = parseFloat(button.innerHTML);[m
[32m+[m[32m//           if (operation == '') {[m
[32m+[m[32m//             number1 = parseFloat(button.innerHTML);[m
[32m+[m[32m//           } else {[m
[32m+[m[32m//             number2 = parseFloat(button.innerHTML);[m
[32m+[m[32m//           }[m
[32m+[m[32m//       }[m
[32m+[m[32m//     }[m
[32m+[m[32m//   };[m
[32m+[m[32m// }[m
[32m+[m[32m// const calculator = new Calculator();[m
